{"version":3,"file":"js/305.1330511f.js","mappings":"4KAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACG,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOR,EAAIS,gBAAgB,YAAaC,WAAW,gCAAgCN,YAAY,iBAAiBJ,EAAIW,GAAIX,EAAIY,QAAQ,SAASC,GAAO,OAAOX,EAAG,YAAY,CAACY,IAAID,EAAME,GAAGC,MAAM,CAAC,GAAKH,EAAME,GAAG,MAAQF,EAAMI,MAAM,KAAOJ,EAAMK,KAAK,QAAUL,EAAMM,QAAQ,YAAcN,EAAMO,YAAY,aAAeP,EAAMQ,aAAa,UAAYrB,EAAIsB,aAAaT,EAAMU,QAAQA,MAAM,CAACf,MAAOR,EAAIwB,KAAKX,EAAMU,OAAQE,SAAS,SAAUC,GAAM1B,EAAI2B,KAAK3B,EAAIwB,KAAMX,EAAMU,MAAOG,EAAI,EAAEhB,WAAW,sBAAsB,IAAG,IACvqB,EACIkB,EAAkB,G,oBCoBtB,GACAtB,KAAA,sBACAuB,WAAA,CAAAC,UAAAA,EAAAA,GACAC,MAAA,CACAtB,gBAAAuB,SACAC,cAAAC,QAEAC,IAAAA,GACA,OACAX,KAAA,CACAN,KAAA,GACAkB,YAAA,GACAC,OAAA,GACAC,OAAA,GACAC,SAAA,IAEA3B,OAAA,CACA,CACAG,GAAA,OACAE,MAAA,iBACAM,MAAA,OACAL,KAAA,SACAE,YAAA,mBACAD,QAAA,8DACAE,aAAA,oBAEA,CACAN,GAAA,SACAE,MAAA,QACAM,MAAA,SACAL,KAAA,QAEA,CACAH,GAAA,SACAE,MAAA,QACAM,MAAA,SACAL,KAAA,QAEA,CACAH,GAAA,cACAE,MAAA,eACAM,MAAA,cACAL,KAAA,OACAG,aAAA,qBAEA,CACAN,GAAA,WACAE,MAAA,QACAM,MAAA,WACAL,KAAA,SAIA,EACAsB,YAAA,CACAhB,KAAA,CACAN,KAAA,CAAAuB,SAAAA,EAAAA,IACAL,YAAA,CAAAK,SAAAA,EAAAA,IACAJ,OAAA,GACAC,OAAA,GACAC,SAAA,KAGAG,QAAA,CACApB,YAAAA,CAAAC,GACA,YAAAoB,GAAAnB,KAAAD,EACA,ICxFkQ,I,UCO9PqB,GAAY,OACd,EACA7C,EACA6B,GACA,EACA,KACA,WACA,MAIF,EAAegB,EAAiB,O","sources":["webpack://contact-form-app/./src/components/PassportInfoSection.vue","webpack://contact-form-app/src/components/PassportInfoSection.vue","webpack://contact-form-app/./src/components/PassportInfoSection.vue?dca7","webpack://contact-form-app/./src/components/PassportInfoSection.vue?87f6"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"section personal-info\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isActiveSection('passport')),expression:\"isActiveSection('passport')\"}],staticClass:\"input-wrapper\"},_vm._l((_vm.fields),function(field){return _c('FormGroup',{key:field.id,attrs:{\"id\":field.id,\"label\":field.label,\"type\":field.type,\"options\":field.options,\"placeholder\":field.placeholder,\"errorMessage\":field.errorMessage,\"validator\":_vm.getValidator(field.model)},model:{value:(_vm.form[field.model]),callback:function ($$v) {_vm.$set(_vm.form, field.model, $$v)},expression:\"form[field.model]\"}})}),1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"section personal-info\">\n    <div v-show=\"isActiveSection('passport')\" class=\"input-wrapper\">\n      <FormGroup\n          v-for=\"field in fields\"\n          :key=\"field.id\"\n          v-model=\"form[field.model]\"\n          :id=\"field.id\"\n          :label=\"field.label\"\n          :type=\"field.type\"\n          :options=\"field.options\"\n          :placeholder=\"field.placeholder\"\n          :errorMessage=\"field.errorMessage\"\n          :validator=\"getValidator(field.model)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport FormGroup from \"@/components/FormGroup.vue\";\nimport {required} from \"vuelidate/lib/validators\";\nexport default {\n  name: \"PassportInfoSection\",\n  components: { FormGroup },\n  props: {\n    isActiveSection: Function,\n    activeSection: String,\n  },\n  data() {\n    return {\n      form: {\n            type: '',\n            dateOfIssue: '',\n            series: '',\n            number: '',\n            issuedBy: '',\n      },\n      fields: [\n        {\n          id: 'type',\n          label: 'Тип документа*',\n          model: 'type',\n          type: 'select',\n          placeholder: 'Выберите вариант',\n          options: ['Паспорт', 'Свидетельство о рождении', 'Водит. удостоверение'],\n          errorMessage: 'Выберите вариант',\n        },\n        {\n          id: 'series',\n          label: 'Серия',\n          model: 'series',\n          type: 'text',\n        },\n        {\n          id: 'number',\n          label: 'Номер',\n          model: 'number',\n          type: 'text',\n        },\n        {\n          id: 'dateOfIssue',\n          label: 'Дата выдачи*',\n          model: 'dateOfIssue',\n          type: 'date',\n          errorMessage: 'Обязательное поле',\n        },\n        {\n          id: 'issuedBy',\n          label: 'Выдан',\n          model: 'issuedBy',\n          type: 'text',\n        },\n      ]\n    };\n  },\n  validations: {\n    form: {\n      type: {required},\n      dateOfIssue: {required},\n      series: {},\n      number: {},\n      issuedBy: {},\n    }\n  },\n  methods: {\n    getValidator(model) {\n      return this.$v.form[model];\n    },\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PassportInfoSection.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PassportInfoSection.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PassportInfoSection.vue?vue&type=template&id=61191118&scoped=true\"\nimport script from \"./PassportInfoSection.vue?vue&type=script&lang=js\"\nexport * from \"./PassportInfoSection.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61191118\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","isActiveSection","expression","_l","fields","field","key","id","attrs","label","type","options","placeholder","errorMessage","getValidator","model","form","callback","$$v","$set","staticRenderFns","components","FormGroup","props","Function","activeSection","String","data","dateOfIssue","series","number","issuedBy","validations","required","methods","$v","component"],"sourceRoot":""}