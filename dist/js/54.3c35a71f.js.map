{"version":3,"file":"js/54.3c35a71f.js","mappings":"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","sources":["webpack://contact-form-app/./src/components/PersonalInfoSection.vue","webpack://contact-form-app/src/components/PersonalInfoSection.vue","webpack://contact-form-app/./src/components/PersonalInfoSection.vue?6289","webpack://contact-form-app/./src/components/PersonalInfoSection.vue?6dda"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"section personal-info\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isActiveSection('personalInfo')),expression:\"isActiveSection('personalInfo')\"}],staticClass:\"input-wrapper\"},_vm._l((_vm.fields),function(field){return _c('FormGroup',{key:field.id,attrs:{\"id\":field.id,\"label\":field.label,\"type\":field.type,\"options\":field.options,\"placeholder\":field.placeholder,\"errorMessage\":field.errorMessage,\"validator\":_vm.getValidator(field.model)},model:{value:(_vm.form[field.model]),callback:function ($$v) {_vm.$set(_vm.form, field.model, $$v)},expression:\"form[field.model]\"}})}),1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"section personal-info\">\n    <div v-show=\"isActiveSection('personalInfo')\" class=\"input-wrapper\">\n      <FormGroup\n          v-for=\"field in fields\"\n          :key=\"field.id\"\n          v-model=\"form[field.model]\"\n          :id=\"field.id\"\n          :label=\"field.label\"\n          :type=\"field.type\"\n          :options=\"field.options\"\n          :placeholder=\"field.placeholder\"\n          :errorMessage=\"field.errorMessage\"\n          :validator=\"getValidator(field.model)\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport FormGroup from \"@/components/FormGroup.vue\";\nimport {maxLength, minLength, numeric, required} from \"vuelidate/lib/validators\";\nexport default {\n  name: \"PersonalInfoSection\",\n  components: { FormGroup },\n  props: {\n    activeSection: String,\n  },\n  data() {\n    return {\n      form: {\n        surname: '',\n        name: '',\n        middlename: '',\n        dateOfBirth: '',\n        phoneNumber: '7',\n        sex: '',\n        group: '',\n        doctor: '',\n        selectedOptions: [],\n        sms: '',\n      },\n      fields: [\n        {\n          id: 'surname',\n          label: 'Фамилия*',\n          model: 'surname',\n          type: 'text',\n          errorMessage: 'Обязательное поле',\n        },\n        {\n          id: 'name',\n          label: 'Имя*',\n          model: 'name',\n          type: 'text',\n          errorMessage: 'Обязательное поле',\n        },\n        {\n          id: 'middlename',\n          label: 'Отчество',\n          model: 'middlename',\n          type: 'text',\n        },\n        {\n          id: 'dateOfBirth',\n          label: 'Дата рождения*',\n          model: 'dateOfBirth',\n          type: 'date',\n          errorMessage: 'Обязательное поле',\n        },\n        {\n          id: 'phoneNumber',\n          label: 'Телефон*',\n          model: 'phoneNumber',\n          type: 'text',\n          errorMessage: 'Номер должен содержать 11 цифр',\n        },\n        {\n          id: 'sex',\n          label: 'Пол',\n          model: 'sex',\n          type: 'select',\n          placeholder: 'Выберите пол',\n          options: ['Мужской', 'Женский'],\n          errorMessage: 'Выберите вариант',\n        },\n        {\n          id: 'group',\n          label: 'Группа клиентов*',\n          model: 'group',\n          type: 'multiselect',\n          placeholder: 'Выберите группу',\n          options: ['VIP', 'Проблемные', 'ОМС'],\n          errorMessage: 'Выберите вариант',\n        },\n        {\n          id: 'doctor',\n          label: 'Лечащий врач',\n          model: 'doctor',\n          type: 'select',\n          placeholder: 'Выберите врача',\n          options: ['Иванов', 'Захаров', 'Чернышева'],\n          errorMessage: 'Выберите вариант',\n        },\n        {\n          id: 'sms',\n          label: 'Не отправлять СМС',\n          model: 'sms',\n          type: 'checkbox',\n        }\n      ]\n    };\n  },\n  validations: {\n    form: {\n      surname: { required },\n      name: { required },\n      middlename: {},\n      dateOfBirth: { required },\n      phoneNumber: {\n        required,\n        minLength: minLength(11),\n        maxLength: maxLength(11),\n        numeric\n      },\n      sex: {},\n      group: {required},\n      doctor: {},\n      sms: {}\n    }\n  },\n  methods: {\n    toggle() {\n      this.$emit('toggleSection', 'personalInfo');\n    },\n    isActiveSection(section) {\n      return this.activeSection === section;\n    },\n    getValidator(model) {\n      if (this.$v && this.$v.form && this.$v.form[model]) {\n        return this.$v.form[model];\n      } else {\n        console.error('Validation for ' + model + ' is not defined.');\n        return null;\n      }\n    },\n  },\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PersonalInfoSection.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./PersonalInfoSection.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PersonalInfoSection.vue?vue&type=template&id=706dc27a&scoped=true\"\nimport script from \"./PersonalInfoSection.vue?vue&type=script&lang=js\"\nexport * from \"./PersonalInfoSection.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"706dc27a\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","isActiveSection","expression","_l","fields","field","key","id","attrs","label","type","options","placeholder","errorMessage","getValidator","model","form","callback","$$v","$set","staticRenderFns","components","FormGroup","props","activeSection","String","data","surname","middlename","dateOfBirth","phoneNumber","sex","group","doctor","selectedOptions","sms","validations","required","minLength","maxLength","numeric","methods","toggle","$emit","section","$v","console","error","component"],"sourceRoot":""}